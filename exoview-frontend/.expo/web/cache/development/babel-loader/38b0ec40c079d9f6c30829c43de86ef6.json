{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"C:\\\\MyTemp\\\\kurssit\\\\projekti\\\\exoview\\\\exoview-frontend\\\\src\\\\components\\\\PlanetComparison.js\",\n    _this = this;\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar color = \"lightblue\";\nvar exocolor = \"lightblue\";\nexport default function PlanetComparison(props) {\n  var earth = props.comparison;\n  var jupiter = 11.209;\n  var exoSize = 1.3;\n  var relativeSize = 1.0;\n  exoSize = props.planet.pl_rade;\n\n  if (isNaN(props.planet.pl_rade)) {\n    exoSize = 1.0;\n  }\n\n  relativeSize = exoSize / earth;\n  return React.createElement(View, {\n    style: {\n      flex: 0.4,\n      flexDirection: 'row',\n      marginTop: WW() / 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Planet, {\n    relative: relativeSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Planet, {\n    isEarth: true,\n    relative: relativeSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction WW() {\n  var ww = Dimensions.get('window').width / 2.5;\n  return ww;\n}\n\nvar Planet = function Planet(props) {\n  var relativeSize = 1.0;\n  var padding = 0;\n\n  if (props.relative < 1.0 && !props.isEarth) {\n    relativeSize = props.relative;\n    padding = (WW() - WW() * relativeSize) / 2;\n  }\n\n  if (props.relative > 1.0 && props.isEarth) {\n    relativeSize = 1 / props.relative;\n    padding = (WW() - WW() * relativeSize) / 2;\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      height: WW(),\n      paddingTop: padding,\n      backgroundColor: 'rgba(52, 52, 52, 0.0)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      fontSize: 30 * relativeSize,\n      borderRadius: 1000,\n      backgroundColor: color,\n      width: WW() * relativeSize,\n      height: WW() * relativeSize,\n      paddingTop: 55 * relativeSize,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["C:/MyTemp/kurssit/projekti/exoview/exoview-frontend/src/components/PlanetComparison.js"],"names":["React","color","exocolor","PlanetComparison","props","earth","comparison","jupiter","exoSize","relativeSize","planet","pl_rade","isNaN","flex","flexDirection","marginTop","WW","ww","Dimensions","get","width","Planet","padding","relative","isEarth","alignItems","height","paddingTop","backgroundColor","fontSize","borderRadius","textAlign"],"mappings":"AAAA;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,IAAMC,KAAK,GAAG,WAAd;AACA,IAAMC,QAAQ,GAAG,WAAjB;AAUA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAE9C,MAAMC,KAAK,GAAGD,KAAK,CAACE,UAApB;AACA,MAAMC,OAAO,GAAG,MAAhB;AACA,MAAIC,OAAO,GAAG,GAAd;AAEA,MAAIC,YAAY,GAAG,GAAnB;AACAD,EAAAA,OAAO,GAAGJ,KAAK,CAACM,MAAN,CAAaC,OAAvB;;AAEA,MAAIC,KAAK,CAACR,KAAK,CAACM,MAAN,CAAaC,OAAd,CAAT,EAAiC;AAC/BH,IAAAA,OAAO,GAAG,GAAV;AACD;;AAEDC,EAAAA,YAAY,GAAGD,OAAO,GAAGH,KAAzB;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,IAAI,EAAE,GAAP;AAAYC,MAAAA,aAAa,EAAE,KAA3B;AAAkCC,MAAAA,SAAS,EAAGC,EAAE,KAAK;AAArD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEP,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,IAAjB;AAAuB,IAAA,QAAQ,EAAEA,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAKD,SAASO,EAAT,GAAc;AACZ,MAAIC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,GAA1C;AACA,SAAOH,EAAP;AACD;;AASD,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACjB,KAAD,EAAW;AAExB,MAAIK,YAAY,GAAG,GAAnB;AACA,MAAIa,OAAO,GAAG,CAAd;;AAGA,MAAIlB,KAAK,CAACmB,QAAN,GAAiB,GAAjB,IAAwB,CAACnB,KAAK,CAACoB,OAAnC,EAA4C;AAC1Cf,IAAAA,YAAY,GAAGL,KAAK,CAACmB,QAArB;AACAD,IAAAA,OAAO,GAAG,CAACN,EAAE,KAAMA,EAAE,KAAKP,YAAhB,IAAiC,CAA3C;AACD;;AAGD,MAAIL,KAAK,CAACmB,QAAN,GAAiB,GAAjB,IAAwBnB,KAAK,CAACoB,OAAlC,EAA2C;AACzCf,IAAAA,YAAY,GAAG,IAAIL,KAAK,CAACmB,QAAzB;AACAD,IAAAA,OAAO,GAAG,CAACN,EAAE,KAAMA,EAAE,KAAKP,YAAhB,IAAiC,CAA3C;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACI,MAAAA,IAAI,EAAE,CAAP;AAAUY,MAAAA,UAAU,EAAE,QAAtB;AAAgCC,MAAAA,MAAM,EAAEV,EAAE,EAA1C;AAA8CW,MAAAA,UAAU,EAAEL,OAA1D;AAAmEM,MAAAA,eAAe,EAAE;AAApF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EACT;AACEC,MAAAA,QAAQ,EAAG,KAAMpB,YADnB;AAEEqB,MAAAA,YAAY,EAAE,IAFhB;AAGEF,MAAAA,eAAe,EAAE3B,KAHnB;AAIEmB,MAAAA,KAAK,EAAEJ,EAAE,KAAKP,YAJhB;AAKEiB,MAAAA,MAAM,EAAEV,EAAE,KAAKP,YALjB;AAMEkB,MAAAA,UAAU,EAAE,KAAKlB,YANnB;AAOEsB,MAAAA,SAAS,EAAE;AAPb,KADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAeD,CAhCD","sourcesContent":["\"use strict\";\r\nimport React from \"react\";\r\nimport { Text, View, Dimensions } from \"react-native\";\r\n\r\nconst color = \"lightblue\";\r\nconst exocolor = \"lightblue\";\r\n\r\n\r\n/**\r\n * Piirtää vierekkäin kokovertauksen eksoplaneetan ja maan välillä.\r\n * TODO: Vertaa Jupiteriin jos koko on sitä lähempänä\r\n * @param {*} props\r\n *  name = \"Planeetan nimi\" (string)\r\n *  size = planeetan koko numerona (pl_rade)\r\n */\r\nexport default function PlanetComparison(props) {\r\n\r\n  const earth = props.comparison;\r\n  const jupiter = 11.209;\r\n  var exoSize = 1.3;\r\n  \r\n  let relativeSize = 1.0;\r\n  exoSize = props.planet.pl_rade;\r\n\r\n  if (isNaN(props.planet.pl_rade)) {\r\n    exoSize = 1.0;\r\n  }\r\n\r\n  relativeSize = exoSize / earth;\r\n\r\n  return (\r\n    <View style={{flex: 0.4, flexDirection: 'row', marginTop: (WW() / 4)}}>\r\n      <Planet relative={relativeSize}></Planet>\r\n      <Planet isEarth={true} relative={relativeSize}></Planet>\r\n    </View>\r\n  );\r\n}\r\n\r\n/**\r\n * Ottaa ikkunan leveydestä jonkun murto-osan\r\n */\r\nfunction WW() {\r\n  let ww = Dimensions.get('window').width / 2.5;\r\n  return ww;\r\n}\r\n\r\n/**\r\n * Tekee sen planeetan\r\n * @param {*} props\r\n *  name = planeetan nimi, ei tarvi antaa jos maa\r\n *  isEarth = boolean true jos maa\r\n *  relative = relativeSize tuolta ylempää ^\r\n */\r\nconst Planet = (props) => {\r\n\r\n  let relativeSize = 1.0;\r\n  let padding = 0;\r\n\r\n  // Jos ei ole maa mutta on sitä pienempi, pienennetään suhteessa vakiokokoon\r\n  if (props.relative < 1.0 && !props.isEarth) {\r\n    relativeSize = props.relative;\r\n    padding = (WW() - (WW() * relativeSize)) / 2;\r\n  }\r\n\r\n  // Jos on maa ja eksoplaneetta on suurempi, otetaan kokosuhteen käänteisluku\r\n  if (props.relative > 1.0 && props.isEarth) {\r\n    relativeSize = 1 / props.relative;\r\n    padding = (WW() - (WW() * relativeSize)) / 2;\r\n  }\r\n\r\n  return (\r\n    <View style={{flex: 1, alignItems: \"center\", height: WW(), paddingTop: padding, backgroundColor: 'rgba(52, 52, 52, 0.0)'}}>\r\n        <View style={\r\n          {\r\n            fontSize: (30  * relativeSize), \r\n            borderRadius: 1000, // random ylisuuri numero\r\n            backgroundColor: color, \r\n            width: WW() * relativeSize, \r\n            height: WW() * relativeSize, \r\n            paddingTop: 55 * relativeSize, \r\n            textAlign: 'center'}\r\n          } >\r\n        </View>\r\n      </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}