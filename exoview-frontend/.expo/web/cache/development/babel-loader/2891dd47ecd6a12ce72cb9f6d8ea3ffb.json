{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\MyTemp\\\\kurssit\\\\projekti\\\\exoview\\\\exoview-frontend\\\\src\\\\screens\\\\Starsystem.js\";\n\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport DistanceOrbit from \"../components/DistanceOrbit\";\nimport Stars from \"../components/Stars\";\nimport OurSolarSystem from \"../components/OurSolarSystem\";\nimport Planets from \"../components/Planets\";\n\nvar Starsystem = function Starsystem(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  console.log('satrsyst', route.params);\n  var hPhone = Dimensions.get('window').height;\n  var hStar = Dimensions.get('window').width / 2;\n  var star = route.params.star != undefined ? route.params.star : route.params;\n  var system = {\n    star: star,\n    planets: route.params.planets\n  };\n  var auEarth = hPhone / 8;\n  var etaisyydet = [{\n    name: 'Mercury',\n    au: 0.4667\n  }, {\n    name: 'Venus',\n    au: 0.72813\n  }, {\n    name: 'Earth',\n    au: 1\n  }, {\n    name: \"Mars\",\n    au: 1.666\n  }, {\n    name: \"Jupiter\",\n    au: 5.4588\n  }, {\n    name: \"Saturn\",\n    au: 10.1238\n  }, {\n    name: \"Uranus\",\n    au: 20.11\n  }, {\n    name: \"Neptune\",\n    au: 30.33\n  }];\n  var pituus = kaukaisin(route.params.planets);\n  var kaukaisinPlaneetta = solarSystem(pituus, etaisyydet);\n  var lahinAU = lahin(route.params.planets);\n\n  if (lahinAU < 1.0) {\n    auEarth = auEarth / lahinAU;\n    pituus = auEarth * kaukaisinPlaneetta + 30;\n    if (lahinAU > 0.48) etaisyydet.shift();\n    etaisyydet.shift();\n  } else if (lahinAU < 31) {\n    pituus = kaukaisinPlaneetta * auEarth;\n    etaisyydet.shift();\n    etaisyydet.shift();\n  } else {\n    etaisyydet = [{\n      name: \"Neptune\",\n      au: 30.44\n    }];\n    auEarth = auEarth / 30.244;\n    pituus = auEarth * kaukaisinPlaneetta + 100;\n  }\n\n  if (pituus < hPhone) pituus = hPhone / 2;\n  console.log('auearth', auEarth);\n  return React.createElement(ImageBackground, {\n    style: styles.container,\n    source: require(\"../../assets/background.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Kissa\"), React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Kissa\"), React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Kissa\"), React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Kissa\"), React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Kissa\")), React.createElement(View, {\n    key: 2,\n    style: styles.system,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, React.createElement(Stars, {\n    key: route.params.star.hostname,\n    star: route.params.star,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, React.createElement(DistanceOrbit, {\n    height: pituus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), etaisyydet.map(function (planet) {\n    return React.createElement(View, {\n      key: generateKey(),\n      style: {\n        position: 'absolute',\n        marginTop: auEarth * planet.au + hStar\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }\n    }, React.createElement(OurSolarSystem, {\n      planet: planet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 26\n      }\n    }));\n  }), route.params.planets.map(function (planet) {\n    return React.createElement(View, {\n      key: generateKey(),\n      style: {\n        position: 'absolute',\n        marginTop: auEarth * planet.pl_orbsmax + hStar - Dimensions.get('window').width / 16,\n        marginBottom: Dimensions.get('window').width / 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, React.createElement(Planets, {\n      planet: planet,\n      navigation: navigation,\n      system: system,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }));\n  }))));\n};\n\nfunction solarSystem(pituus, etaisyydet) {\n  for (var p in etaisyydet) {\n    if (pituus < etaisyydet[p].au) {\n      console.log('returnissa');\n      return etaisyydet[p].au;\n    }\n  }\n\n  return pituus;\n}\n\nfunction kaukaisin(planets) {\n  var kaukaisin = planets[0];\n\n  for (var p in planets) {\n    if (planets[p].pl_orbsmax > kaukaisin.pl_orbsmax) {\n      kaukaisin = planets[p];\n    }\n  }\n\n  return kaukaisin.pl_orbsmax;\n}\n\nfunction lahin(planets) {\n  var lahin = planets[0];\n\n  for (var p in planets) {\n    if (planets[p].pl_orbsmax < lahin.pl_orbsmax) {\n      lahin = planets[p];\n    }\n  }\n\n  return lahin.pl_orbsmax;\n}\n\nvar generateKey = function generateKey() {\n  var keys = '1234567890abcdefghijklmnopqrstuvwxyz';\n  var idLength = 10;\n  var i = 0;\n  var id = '';\n\n  while (i < idLength) {\n    id = id + keys.charAt(Math.floor(Math.random() * Math.floor(keys.length)));\n    i++;\n  }\n\n  return id;\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    paddingTop: 10,\n    paddingLeft: 10\n  },\n  system: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    position: 'relative'\n  },\n  infotext: {\n    flex: 10\n  },\n  textTitle: {\n    fontSize: 20,\n    margin: 10,\n    color: \"white\",\n    fontWeight: 'bold'\n  },\n  textParagraph: {\n    color: 'white',\n    margin: 10\n  }\n});\nexport default Starsystem;","map":{"version":3,"sources":["C:/MyTemp/kurssit/projekti/exoview/exoview-frontend/src/screens/Starsystem.js"],"names":["React","useEffect","useState","DistanceOrbit","Stars","OurSolarSystem","Planets","Starsystem","route","navigation","console","log","params","hPhone","Dimensions","get","height","hStar","width","star","undefined","system","planets","auEarth","etaisyydet","name","au","pituus","kaukaisin","kaukaisinPlaneetta","solarSystem","lahinAU","lahin","shift","styles","container","require","color","hostname","position","map","planet","generateKey","marginTop","pl_orbsmax","marginBottom","p","keys","idLength","i","id","charAt","Math","floor","random","length","StyleSheet","create","flex","justifyContent","paddingTop","paddingLeft","flexDirection","alignItems","infotext","textTitle","fontSize","margin","fontWeight","textParagraph"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {  TouchableOpacity, FlatList, Keyboard, View, Text, TextInput, StyleSheet, ScrollView, Dimensions, ImageBackground } from 'react-native';\r\nimport DistanceOrbit from '../components/DistanceOrbit'\r\nimport Stars from '../components/Stars'\r\nimport OurSolarSystem from '../components/OurSolarSystem';\r\nimport Planets from '../components/Planets'\r\n\r\n/*\r\nmerkurius 0,4667\r\nvenus 0.728213\r\nmaa 1\r\nmars 1.666\r\njupiter 5.4588 \r\nsaturnus 10.1238\r\nuranus 20.11\r\nneptunus 30.33\r\n\r\nTODO: sklaaukset fiksusti\r\nTODO: tekstit\r\n*/\r\nconst Starsystem = ({ route, navigation }) => {\r\n    console.log('satrsyst', route.params)\r\n\r\n    const hPhone = Dimensions.get('window').height\r\n    const hStar = Dimensions.get('window').width / 2\r\n    const star = route.params.star != undefined ? route.params.star : route.params\r\n    const system = {star: star, planets: route.params.planets}\r\n    let  auEarth =hPhone/8// 1 AU\r\n\r\n    //meidän aurinkokunnan planettoojen etäisyydet\r\n    var etaisyydet = [ {name: 'Mercury', au: 0.4667}, {name:'Venus', au: 0.72813}, {name: 'Earth', au:1},{name:\"Mars\",au:1.666},{name:\"Jupiter\",au:5.4588},{name:\"Saturn\",au:10.1238},{name:\"Uranus\",au:20.11},{name:\"Neptune\",au:30.33}];\r\n    let  pituus = kaukaisin(route.params.planets) ; // kaukaisin tähtijärjestelmän eksoplaneetta (AU)\r\n    let kaukaisinPlaneetta = solarSystem(pituus,etaisyydet) // meidän aurinkokunnan planeettta, jota lähempänä kaukaisin eksoplaneetta on (AU)\r\n    let lahinAU = lahin(route.params.planets)\r\n\r\n\r\n    // etäisyyksien uudelleen suhteuttaminen: 1. lähempänä kuin maa, maa ja neptunus välillä, kauempana kuin neptunus\r\n    if (lahinAU < 1.0) {\r\n        auEarth = auEarth/ lahinAU // aseteteaan uuteen suhteeseen lähin eksoplaneetta nyt 1AU\r\n        pituus =  auEarth *kaukaisinPlaneetta +30\r\n        if (lahinAU > 0.48 )  etaisyydet.shift(); etaisyydet.shift()\r\n    } else  if (lahinAU < 31 ){\r\n        pituus = kaukaisinPlaneetta * auEarth\r\n        etaisyydet.shift();etaisyydet.shift() //poistetaan näkymästä merkurius ja venus\r\n    } else {\r\n        etaisyydet =[{name:\"Neptune\",au:30.44}]\r\n        auEarth = auEarth/30.244 /// aseteteaan uuteen suhteeseen lähin eksoplaneetta nyt 1AU\r\n        pituus =  auEarth *kaukaisinPlaneetta + 100\r\n        \r\n        \r\n    }\r\n    if (pituus < hPhone) pituus=hPhone /2 // pidetään huoli, että viiva jatkuu vähintään puhelimen näytön pituuden verran\r\n\r\n\r\n    console.log('auearth', auEarth)\r\n    return ( \r\n        <ImageBackground style={styles.container} source={require('../../assets/background.png')} >\r\n            \r\n            <ScrollView > \r\n            <View style={{height: 200}}>\r\n                <Text style={{color:'white'}}>Kissa</Text>\r\n                <Text style={{color:'white'}}>Kissa</Text>\r\n                <Text style={{color:'white'}}>Kissa</Text>\r\n                <Text style={{color:'white'}}>Kissa</Text>\r\n                <Text style={{color:'white'}}>Kissa</Text>\r\n            </View>\r\n                <View key = {2} style={styles.system}>\r\n                    <Stars key={route.params.star.hostname} star={route.params.star}></Stars>\r\n                {/*jokaista planeettaa kohten palautetaan*/}\r\n                    <View style={{position: 'relative'}} >\r\n                        <DistanceOrbit height ={pituus}/>\r\n                    </View>\r\n                   {etaisyydet.map((planet) => \r\n                         <View key={generateKey()} style={{ position: 'absolute', marginTop: auEarth*planet.au + hStar }}>\r\n                         <OurSolarSystem planet={planet}/>\r\n                         </View>\r\n                     )}\r\n                    {route.params.planets.map((planet) =>\r\n                    <View key={generateKey()} style={{position: 'absolute', marginTop:  auEarth*planet.pl_orbsmax + hStar -(Dimensions.get('window').width / 16), marginBottom:(Dimensions.get('window').width / 16) }} >\r\n                        <Planets planet={planet} navigation={navigation} system={system} />\r\n                    </View>\r\n                    )}\r\n                </View>\r\n            </ScrollView>\r\n        </ImageBackground>\r\n    )\r\n};\r\n\r\nfunction solarSystem(pituus, etaisyydet) {\r\nfor (const p in etaisyydet) {\r\n        if (pituus <etaisyydet[p].au) {console.log('returnissa'); return etaisyydet[p].au}\r\n\r\n}\r\n    return pituus\r\n}\r\n\r\nfunction kaukaisin(planets){\r\nvar kaukaisin = planets[0];\r\nfor (const p in planets) {\r\n    if(planets[p].pl_orbsmax > kaukaisin.pl_orbsmax){\r\n        kaukaisin = planets[p];\r\n    }\r\n}\r\nreturn kaukaisin.pl_orbsmax;\r\n\r\n    \r\n}\r\nfunction lahin(planets){\r\n    var lahin = planets[0];\r\n    for (const p in planets) {\r\n        if(planets[p].pl_orbsmax < lahin.pl_orbsmax){\r\n            lahin = planets[p];\r\n        }\r\n    }\r\n    return lahin.pl_orbsmax; \r\n}\r\n\r\n//Luo id:n planeettakomponenteille\r\nconst generateKey = () => {\r\n    const keys = '1234567890abcdefghijklmnopqrstuvwxyz'\r\n\r\n    const idLength = 10\r\n\r\n    let i = 0;\r\n\r\n    let id = '';\r\n\r\n    while (i < idLength) {\r\n        id = id + keys.charAt(Math.floor(Math.random() * Math.floor(keys.length)))\r\n        i++;\r\n    }\r\n\r\n    return id;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n\r\n      justifyContent:'flex-start',\r\n      //justifyContent: 'center',\r\n      //backgroundColor: 'black',\r\n      paddingTop: 10,\r\n      paddingLeft: 10\r\n    },\r\n    system: {\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        position: 'relative'\r\n       // backgroundColor:'black',\r\n    },\r\n    infotext: {\r\n        flex: 10,\r\n       // backgroundColor: 'black',\r\n    },\r\n    textTitle: {\r\n        fontSize: 20,\r\n        margin: 10,\r\n        color: \"white\",\r\n        fontWeight: 'bold'\r\n    },\r\n    textParagraph: {\r\n        color: 'white',\r\n        margin: 10\r\n    }\r\n})\r\n/**         <View style={styles.infotext}>\r\n                <Text style={styles.textTitle}>{star.hostname}</Text>\r\n                <Text style={{color:'white'}}>- star system</Text>\r\n                <Text style={styles.textParagraph}>{star.hostname}</Text>\r\n            </View> */\r\nexport default Starsystem;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}