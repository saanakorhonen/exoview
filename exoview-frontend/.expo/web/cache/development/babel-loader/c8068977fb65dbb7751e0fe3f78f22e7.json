{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\E\\\\uni\\\\tiea207\\\\exoview\\\\exoview\\\\exoview-frontend\\\\src\\\\components\\\\Planets.js\";\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport default function Stars(_ref) {\n  var planet = _ref.planet,\n      navigation = _ref.navigation;\n  console.log(planet.pl_rade);\n  var pEarthRel = planet.pl_rade / 1.0;\n  var bPlanet = {\n    color: \"\",\n    relativeSize: -1\n  };\n  var fPlanet = {\n    color: \"\",\n    relativeSize: -1\n  };\n\n  if (pEarthRel > 1) {\n    bPlanet.color = 'grey';\n    bPlanet.relativeSize = 1.0;\n    fPlanet.relativeSize = 1 / pEarthRel;\n    fPlanet.color = \"darkblue\";\n  } else {\n    bPlanet.color = \"darkblue\";\n    bPlanet.relativeSize = 1.0;\n    fPlanet.color = 'grey';\n    fPlanet.relativeSize = planet.pl_rad;\n  }\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Information', {\n        planet: planet,\n        system: []\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 0.5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      position: 'relative',\n      backgroundColor: bPlanet.color,\n      height: WW() * bPlanet.relativeSize,\n      width: WW() * bPlanet.relativeSize,\n      borderRadius: 1000,\n      borderColor: 'grey',\n      borderWidth: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      backgroundColor: fPlanet.color,\n      height: WW() * fPlanet.relativeSize,\n      width: WW() * fPlanet.relativeSize,\n      borderRadius: 1000,\n      borderColor: 'grey',\n      borderWidth: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction WW() {\n  var ww = Dimensions.get('window').width / 8;\n  return ww;\n}","map":{"version":3,"sources":["C:/Users/E/uni/tiea207/exoview/exoview/exoview-frontend/src/components/Planets.js"],"names":["React","Stars","planet","navigation","console","log","pl_rade","pEarthRel","bPlanet","color","relativeSize","fPlanet","pl_rad","navigate","system","flex","alignItems","justifyContent","position","backgroundColor","height","WW","width","borderRadius","borderColor","borderWidth","ww","Dimensions","get"],"mappings":"AAAA;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAWA,eAAe,SAASC,KAAT,OAAuC;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AAUF,MAAMC,SAAS,GAAGL,MAAM,CAACI,OAAP,GAAiB,GAAnC;AAEA,MAAME,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAC,EADQ;AAEdC,IAAAA,YAAY,EAAE,CAAC;AAFD,GAAhB;AAKA,MAAMC,OAAO,GAAG;AACdF,IAAAA,KAAK,EAAE,EADO;AAEdC,IAAAA,YAAY,EAAE,CAAC;AAFD,GAAhB;;AAKA,MAAGH,SAAS,GAAG,CAAf,EAAiB;AACfC,IAAAA,OAAO,CAACC,KAAR,GAAgB,MAAhB;AACAD,IAAAA,OAAO,CAACE,YAAR,GAAuB,GAAvB;AACAC,IAAAA,OAAO,CAACD,YAAR,GAAuB,IAAIH,SAA3B;AACAI,IAAAA,OAAO,CAACF,KAAR,GAAgB,UAAhB;AAED,GAND,MAOK;AACDD,IAAAA,OAAO,CAACC,KAAR,GAAgB,UAAhB;AACAD,IAAAA,OAAO,CAACE,YAAR,GAAuB,GAAvB;AAEAC,IAAAA,OAAO,CAACF,KAAR,GAAgB,MAAhB;AACAE,IAAAA,OAAO,CAACD,YAAR,GAAuBR,MAAM,CAACU,MAA9B;AAGH;;AAGD,SACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAK;AAAA,aAAMT,UAAU,CAACU,QAAX,CAAoB,aAApB,EAAmC;AAACX,QAAAA,MAAM,EAAEA,MAAT;AAAgBY,QAAAA,MAAM,EAAE;AAAxB,OAAnC,CAAN;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,UAAU,EAAE,QAAzB;AAAmCC,MAAAA,cAAc,EAAE;AAAnD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,eAAe,EAAEX,OAAO,CAACC,KAAjD;AAAwDW,MAAAA,MAAM,EAAEC,EAAE,KAAIb,OAAO,CAACE,YAA9E;AAA4FY,MAAAA,KAAK,EAAED,EAAE,KAAGb,OAAO,CAACE,YAAhH;AAA8Ha,MAAAA,YAAY,EAAE,IAA5I;AAAkJC,MAAAA,WAAW,EAAE,MAA/J;AAAuKC,MAAAA,WAAW,EAAC;AAAnL,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAQ,EAAE,UAAZ;AAAuBC,MAAAA,eAAe,EAAER,OAAO,CAACF,KAAhD;AAAwDW,MAAAA,MAAM,EAAEC,EAAE,KAAIV,OAAO,CAACD,YAA9E;AAA4FY,MAAAA,KAAK,EAAED,EAAE,KAAGV,OAAO,CAACD,YAAhH;AAA8Ha,MAAAA,YAAY,EAAE,IAA5I;AAAkJC,MAAAA,WAAW,EAAE,MAA/J;AAAuKC,MAAAA,WAAW,EAAC;AAAnL,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADA,CADF;AAYD;;AAMD,SAASJ,EAAT,GAAc;AACZ,MAAIK,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBN,KAAzB,GAAiC,CAA1C;AACA,SAAOI,EAAP;AACD","sourcesContent":["\"use strict\";\r\nimport React from \"react\";\r\nimport { TouchableOpacity, View, Dimensions, Text } from \"react-native\";\r\n\r\n\r\n/**\r\n * Piirtää vierekkäin kokovertauksen eksoplaneetan ja maan välillä.\r\n * TODO: Vertaa Jupiteriin jos koko on sitä lähempänä\r\n * @param {*} props\r\n *  name = \"Planeetan nimi\" (string)\r\n *  size = planeetan koko numerona (pl_rade)\r\n */\r\nexport default function Stars({ planet, navigation }) {\r\n    console.log(planet.pl_rade)\r\n  /*\r\n  let relativeSize = 1.0;\r\n  exoSize = props.planet.pl_rade;\r\n\r\n  if (isNaN(props.planet.pl_rade)) {\r\n    exoSize = 1.0;\r\n  }\r\n*/\r\n\r\n  const pEarthRel = planet.pl_rade / 1.0;\r\n\r\n  const bPlanet = {\r\n    color:\"\",\r\n    relativeSize: -1,\r\n  };\r\n\r\n  const fPlanet = {\r\n    color: \"\",\r\n    relativeSize: -1,\r\n  }\r\n\r\n  if(pEarthRel > 1){\r\n    bPlanet.color = 'grey';\r\n    bPlanet.relativeSize = 1.0\r\n    fPlanet.relativeSize = 1 / pEarthRel \r\n    fPlanet.color = \"darkblue\";\r\n    //padding = (WW() - (WW() * relativeSize)) / 2;\r\n  }\r\n  else {\r\n      bPlanet.color = \"darkblue\";\r\n      bPlanet.relativeSize = 1.0\r\n\r\n      fPlanet.color = 'grey';\r\n      fPlanet.relativeSize = planet.pl_rad;\r\n\r\n     // padding = (WW() - (WW() * relativeSize)) / 2;\r\n  }\r\n  \r\n  \r\n  return (\r\n    <TouchableOpacity onPress = { () => navigation.navigate('Information', {planet: planet,system: []})}>\r\n    <View style={{ flex: 0.5, alignItems: 'center', justifyContent: 'center' }  }  >\r\n      {/** background star */}\r\n        <View style={{ position: 'relative', backgroundColor: bPlanet.color, height: WW()* bPlanet.relativeSize, width: WW()*bPlanet.relativeSize, borderRadius: 1000, borderColor: 'grey', borderWidth:1}}> \r\n        </View>\r\n        {/** front star */}\r\n        <View style={{ position: 'absolute',backgroundColor: fPlanet.color,  height: WW()* fPlanet.relativeSize, width: WW()*fPlanet.relativeSize, borderRadius: 1000, borderColor: 'grey', borderWidth:1}}>\r\n        </View> \r\n    </View>\r\n\r\n    </TouchableOpacity>  )\r\n}\r\n\r\n\r\n/**\r\n * Ottaa ikkunan leveydestä jonkun murto-osan\r\n */\r\nfunction WW() {\r\n  let ww = Dimensions.get('window').width / 8;\r\n  return ww;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}