{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"C:\\\\MyTemp\\\\kurssit\\\\projekti\\\\exoview\\\\exoview-frontend\\\\src\\\\components\\\\Stars.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar fColor = \"lightblue\";\nvar bColor = \"lightblue\";\nexport default function Stars(_ref) {\n  var star = _ref.star;\n  console.log(star.st_rad);\n  var starSunRel = star.st_rad / 1.0;\n  var bStar = {\n    name: \"\",\n    color: \"\",\n    teff: \"\",\n    relativeSize: -1\n  };\n  var fStar = {\n    name: \"\",\n    color: \"\",\n    teff: \"\",\n    relativeSize: -1\n  };\n\n  if (starSunRel > 1) {\n    bStar.color = starColor(star.st_teff);\n    bStar.relativeSize = 1.0;\n    bStar.name = star.hostname;\n    bStar.teff = star.st_teff;\n    fStar.relativeSize = 1 / starSunRel;\n    fStar.color = starColor(5772);\n    fStar.name = \"Sun\";\n    fStar.teff = 5772;\n  } else {\n    bStar.color = starColor(5772);\n    bStar.relativeSize = 1.0;\n    bStar.name = \"Sun\";\n    bStar.teff = 5772;\n    fStar.color = starColor(star.st_teff);\n    fStar.relativeSize = star.st_rad;\n    fStar.name = star.hostname;\n    fStar.teff = star.st_teff;\n  }\n\n  console.log(bStar.color);\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: {\n      position: \"relative\",\n      backgroundColor: bStar.color,\n      height: WW() * bStar.relativeSize,\n      width: WW() * bStar.relativeSize,\n      borderRadius: 1000,\n      borderColor: \"grey\",\n      borderWidth: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      backgroundColor: fStar.color,\n      height: WW() * fStar.relativeSize,\n      width: WW() * fStar.relativeSize,\n      borderRadius: 1000,\n      borderColor: \"grey\",\n      borderWidth: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      height: Dimensions.get(\"window\").width / 2,\n      marginHorizontal: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, star.hostname), React.createElement(Text, {\n    style: styles.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, star.hostname, \" has \", star.st_rad, \" radius of the sun and \", star.st_mass, \" mass of the sun. It has the stellar age of \", star.st_age, \" and \", star.st_teff, \" K hot. The star spins around its own axis in \", star.st_rotp, \" days.\")));\n}\n\nfunction starColor(temp) {\n  if (temp < 3500) return \"red\";else if (temp < 5000) return \"orange\";else if (temp < 8000) return \"yellow\";else if (temp < 20000) return \"white\";\n  return \"blue\";\n}\n\nfunction WW() {\n  var ww = Dimensions.get(\"window\").width / 2;\n  return ww;\n}\n\nvar styles = StyleSheet.create({\n  paragraph: {\n    color: \"white\"\n  },\n  title: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"700\"\n  }\n});","map":{"version":3,"sources":["C:/MyTemp/kurssit/projekti/exoview/exoview-frontend/src/components/Stars.js"],"names":["React","fColor","bColor","Stars","star","console","log","st_rad","starSunRel","bStar","name","color","teff","relativeSize","fStar","starColor","st_teff","hostname","flexDirection","alignItems","justifyContent","position","backgroundColor","height","WW","width","borderRadius","borderColor","borderWidth","flex","Dimensions","get","marginHorizontal","styles","title","paragraph","st_mass","st_age","st_rotp","temp","ww","StyleSheet","create","fontSize","fontWeight"],"mappings":"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","sourcesContent":["\"use strict\";\r\nimport React from \"react\";\r\nimport { Text, View, Dimensions, StyleSheet } from \"react-native\";\r\n\r\nlet fColor = \"lightblue\";\r\nlet bColor = \"lightblue\";\r\n\r\n/**\r\n * Piirtää vierekkäin kokovertauksen eksoplaneetan ja maan välillä.\r\n * TODO: Vertaa Jupiteriin jos koko on sitä lähempänä\r\n * @param {*} props\r\n *  name = \"Planeetan nimi\" (string)\r\n *  size = planeetan koko numerona (pl_rade)\r\n */\r\nexport default function Stars({ star }) {\r\n\tconsole.log(star.st_rad);\r\n\t/*\r\n  let relativeSize = 1.0;\r\n  exoSize = props.planet.pl_rade;\r\n\r\n  if (isNaN(props.planet.pl_rade)) {\r\n    exoSize = 1.0;\r\n  }\r\n*/\r\n\r\n\tconst starSunRel = star.st_rad / 1.0;\r\n\r\n\tconst bStar = {\r\n\t\tname: \"\",\r\n\t\tcolor: \"\",\r\n\t\tteff: \"\",\r\n\t\trelativeSize: -1,\r\n\t};\r\n\r\n\tconst fStar = {\r\n\t\tname: \"\",\r\n\t\tcolor: \"\",\r\n\t\tteff: \"\",\r\n\t\trelativeSize: -1,\r\n\t};\r\n\r\n\tif (starSunRel > 1) {\r\n\t\tbStar.color = starColor(star.st_teff);\r\n\t\tbStar.relativeSize = 1.0;\r\n\t\tbStar.name = star.hostname;\r\n\t\tbStar.teff = star.st_teff;\r\n\r\n\t\tfStar.relativeSize = 1 / starSunRel;\r\n\t\tfStar.color = starColor(5772);\r\n\t\tfStar.name = \"Sun\";\r\n\t\tfStar.teff = 5772;\r\n\t\t//padding = (WW() - (WW() * relativeSize)) / 2;\r\n\t} else {\r\n\t\tbStar.color = starColor(5772);\r\n\t\tbStar.relativeSize = 1.0;\r\n\t\tbStar.name = \"Sun\";\r\n\t\tbStar.teff = 5772;\r\n\r\n\t\tfStar.color = starColor(star.st_teff);\r\n\t\tfStar.relativeSize = star.st_rad;\r\n\t\tfStar.name = star.hostname;\r\n\t\tfStar.teff = star.st_teff;\r\n\r\n\t\t// padding = (WW() - (WW() * relativeSize)) / 2;\r\n\t}\r\n\r\n\tconsole.log(bStar.color);\r\n\treturn (\r\n\t\t<View style={{ flexDirection: \"row\" }}>\r\n\t\t\t<View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n\t\t\t\t<View\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t\tbackgroundColor: bStar.color,\r\n\t\t\t\t\t\theight: WW() * bStar.relativeSize,\r\n\t\t\t\t\t\twidth: WW() * bStar.relativeSize,\r\n\t\t\t\t\t\tborderRadius: 1000,\r\n\t\t\t\t\t\tborderColor: \"grey\",\r\n\t\t\t\t\t\tborderWidth: 1,\r\n\t\t\t\t\t}}></View>\r\n\t\t\t\t{/** front star */}\r\n\t\t\t\t<View\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tbackgroundColor: fStar.color,\r\n\t\t\t\t\t\theight: WW() * fStar.relativeSize,\r\n\t\t\t\t\t\twidth: WW() * fStar.relativeSize,\r\n\t\t\t\t\t\tborderRadius: 1000,\r\n\t\t\t\t\t\tborderColor: \"grey\",\r\n\t\t\t\t\t\tborderWidth: 1,\r\n\t\t\t\t\t}}></View>\r\n\t\t\t</View>\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tflex: 1,\r\n\t\t\t\t\theight: Dimensions.get(\"window\").width / 2,\r\n\t\t\t\t\tmarginHorizontal: 10,\r\n\t\t\t\t}}>\t\r\n\t\t\t\t<Text style={styles.title}>{star.hostname}</Text>\r\n\t\t\t\t<Text style={styles.paragraph}>\r\n\t\t\t\t    {star.hostname} has {star.st_rad} radius of the sun and {star.st_mass} mass of the sun.\r\n\t\t\t\t\tIt has the stellar age of {star.st_age} and {star.st_teff} K hot. The star spins around its own axis in {star.st_rotp} days.\r\n\t\t\t\t</Text>\r\n\t\t\t\t{/*<Text style={styles.paragraph}>\r\n\t\t\t\t\tThe Star shown behind is {bStar.name}. It's stellar effective\r\n\t\t\t\t\ttemperature is {bStar.teff} K. The star infront is {fStar.name} and\r\n\t\t\t\t\tit's stellar effective temperature is {fStar.teff}\r\n\t\t\t\t   </Text> */}\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\n/**\r\n *\r\n * @param { <Planet relative={relativeSize}></Planet>\r\n */\r\nfunction starColor(temp) {\r\n\tif (temp < 3500) return \"red\";\r\n\telse if (temp < 5000) return \"orange\";\r\n\telse if (temp < 8000) return \"yellow\";\r\n\telse if (temp < 20000) return \"white\";\r\n\treturn \"blue\";\r\n}\r\n\r\n/**\r\n * Ottaa ikkunan leveydestä jonkun murto-osan\r\n */\r\nfunction WW() {\r\n\tlet ww = Dimensions.get(\"window\").width / 2;\r\n\treturn ww;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tparagraph: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: \"700\",\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}