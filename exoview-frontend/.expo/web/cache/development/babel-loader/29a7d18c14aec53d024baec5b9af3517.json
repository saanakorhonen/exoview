{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\MyTemp\\\\kurssit\\\\projekti\\\\exoview\\\\exoview-frontend\\\\src\\\\screens\\\\Search.js\";\n\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { parse } from 'fast-xml-parser';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Menu, MenuProvider, MenuOptions, MenuOption, MenuTrigger } from \"react-native-popup-menu\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { set } from 'react-native-reanimated';\n\nvar Search = function Search(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      foundPlanets = _useState2[0],\n      setFoundPlanets = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allPlanets = _useState4[0],\n      setAllPlanets = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchFilter = _useState6[0],\n      setFilter = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchTerm = _useState8[0],\n      changeSearchTerm = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      juoksevaluku = _useState10[0],\n      setJuoksevaluku = _useState10[1];\n\n  var _useState11 = useState('Search options'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      menuTriggerText = _useState12[0],\n      setMenuTriggerText = _useState12[1];\n\n  useEffect(function () {\n    setAllPlanets(route.params);\n  }, []);\n  useEffect(function () {\n    setFoundPlanets(allPlanets);\n  }, [allPlanets]);\n\n  var renderFoundPlanets = function renderFoundPlanets() {\n    return foundPlanets.map(function (planet) {\n      return React.createElement(PlanetBrief, {\n        navigation: navigation,\n        data: planet,\n        key: generateKey(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 43\n        }\n      });\n    });\n  };\n\n  var parseSearchTerms = function parseSearchTerms() {\n    if (searchTerm === \"\" || searchFilter === \"\") {\n      Keyboard.dismiss();\n      setFilter(\"\");\n      setMenuTriggerText('Search Options');\n      return setFoundPlanets(allPlanets);\n    }\n\n    var searchedWord = '^' + searchTerm;\n    var filteredPlanetsAr = searchFilter !== 'pl_rade' && searchFilter !== 'pl_masse' ? allPlanets.filter(function (planet) {\n      return planet[searchFilter].toLowerCase().match(searchTerm.toLowerCase());\n    }) : allPlanets.filter(function (planet) {\n      return planet[searchFilter].toString().match(searchedWord);\n    });\n    setFoundPlanets(filteredPlanetsAr);\n    Keyboard.dismiss();\n  };\n\n  var handleTextChange = function handleTextChange(term) {\n    if (term === '') {\n      setFilter(\"\");\n      return setFoundPlanets(allPlanets);\n    }\n\n    changeSearchTerm(term);\n  };\n\n  var createQuery = function createQuery() {\n    var hakuehto = searchFilter;\n\n    if (hakuehto === '' || hakuehto === undefined) {\n      console.log(alku + loppu);\n      return alku + loppu;\n    }\n\n    var hakutermi = '+like+\\'' + searchTerm + '%\\'';\n    console.log(alku + hakuehto + hakutermi);\n    return alku + hakuehto + hakutermi;\n  };\n\n  var changeMenuTrigger = function changeMenuTrigger(filter) {\n    switch (filter) {\n      case \"pl_name\":\n        setMenuTriggerText(\"Planet name\");\n        break;\n\n      case \"hostname\":\n        setMenuTriggerText(\"Host star\");\n        break;\n\n      case \"pl_rade\":\n        setMenuTriggerText(\"Radius\");\n        break;\n\n      case \"pl_masse\":\n        setMenuTriggerText(\"Planet masse\");\n        break;\n\n      default:\n        setMenuTriggerText(\"Search options\");\n        break;\n    }\n  };\n\n  return React.createElement(MenuProvider, {\n    style: {\n      backgroundColor: '#0E1D32',\n      padding: 5\n    },\n    on: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.searchBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(term) {\n      return handleTextChange(term);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.searchIcon,\n    onPress: function onPress() {\n      return parseSearchTerms();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"search\",\n    size: 35,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'flex-end',\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, React.createElement(Menu, {\n    style: styles.menu,\n    onSelect: function onSelect(filter) {\n      setFilter(filter);\n      changeMenuTrigger(filter);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, React.createElement(MenuTrigger, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 14,\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, menuTriggerText)), React.createElement(MenuOptions, {\n    style: {\n      backgroundColor: '#0E1D32',\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, React.createElement(MenuOption, {\n    value: \"pl_name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, \"Planet name\")), React.createElement(MenuOption, {\n    value: \"hostname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"Host star\")), React.createElement(MenuOption, {\n    value: \"pl_rade\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, \"Radius\")), React.createElement(MenuOption, {\n    value: \"pl_masse\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, \"Planet masse\"))))), React.createElement(FlatList, {\n    data: foundPlanets,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(PlanetBrief, {\n        navigation: navigation,\n        data: item,\n        allPlanets: foundPlanets,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.pl_name;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }));\n};\n\nvar generateKey = function generateKey() {\n  var keys = '1234567890abcdefghijklmnopqrstuvwxyz';\n  var idLength = 10;\n  var i = 0;\n  var id = '';\n\n  while (i < idLength) {\n    id = id + keys.charAt(Math.floor(Math.random() * Math.floor(keys.length)));\n    i++;\n  }\n\n  return id;\n};\n\nvar PlanetBrief = function PlanetBrief(props) {\n  var isVisible = false;\n\n  var toggleVisibility = function toggleVisibility() {\n    isVisible = !isVisible;\n  };\n\n  var renderView = function renderView() {\n    if (isVisible) {\n      return view;\n    }\n\n    return null;\n  };\n\n  var view = React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.infoWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, \"Host star: \", props.data.hostname), React.createElement(Text, {\n    style: styles.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, \"Masse: \", props.data.pl_masse), React.createElement(Text, {\n    style: styles.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, \"Radius: \", props.data.pl_rade)), React.createElement(View, {\n    style: styles.buttonWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return handleStarsystem2(props);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 106\n    }\n  }, \"View planet\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return handleStarsystem(props);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 105\n    }\n  }, \"Stellar System\"))));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headerWrapper,\n    onPress: toggleVisibility(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, props.data.pl_name)), renderView());\n};\n\nvar handleStarsystem = function handleStarsystem(props, allPlanets) {\n  var nimi = props.data.pl_name;\n  var kutsu = \"https://exoplanetarchive.ipac.caltech.edu/TAP/sync?query=select+top+1+st_spectype,st_teff,st_rad,st_mass,st_age,st_rotp+from+pscomppars+where+pl_name+like+\\'\" + nimi + \"\\'+order+by+disc_year+desc\";\n  fetchData(kutsu).then(function (data) {\n    var star = setStars(data, props.data.hostname);\n    var tahdenplaneetat = props.allPlanets.filter(function (planet) {\n      return planet['hostname'].match(star.hostname);\n    });\n    var system = {\n      star: star,\n      planets: tahdenplaneetat\n    };\n    props.navigation.navigate('StarSystem', system);\n  });\n};\n\nvar handleStarsystem2 = function handleStarsystem2(props, allPlanets) {\n  var nimi = props.data.pl_name;\n  var kutsu = \"https://exoplanetarchive.ipac.caltech.edu/TAP/sync?query=select+top+1+st_spectype,st_teff,st_rad,st_mass,st_age,st_rotp+from+pscomppars+where+pl_name+like+\\'\" + nimi + \"\\'+order+by+disc_year+desc\";\n  fetchData(kutsu).then(function (data) {\n    var star = setStars(data, props.data.hostname);\n    var tahdenplaneetat = props.allPlanets.filter(function (planet) {\n      return planet['hostname'].match(star.hostname);\n    });\n    var system = {\n      star: star,\n      planets: tahdenplaneetat\n    };\n    props.navigation.navigate('Information', {\n      planet: props.data,\n      system: system\n    });\n  });\n};\n\nvar fetchData = function fetchData(props) {\n  var response, teksti, objects, planetArray;\n  return _regeneratorRuntime.async(function fetchData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(props));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.text());\n\n        case 5:\n          teksti = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(parse(teksti));\n\n        case 8:\n          objects = _context.sent;\n          planetArray = objects.VOTABLE.RESOURCE.TABLE.DATA.TABLEDATA.TR;\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var success = planetArray != undefined;\n            success ? resolve(planetArray) : reject('Query failed');\n          }));\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar setStars = function setStars(arr, data) {\n  var star = arr.TD;\n  var propPlanet = {\n    hostname: data,\n    st_spectype: star[0],\n    st_teff: star[1],\n    st_rad: star[2],\n    st_mass: star[3],\n    st_age: star[4],\n    st_rotp: star[5]\n  };\n  return propPlanet;\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    padding: 10,\n    marginHorizontal: 10,\n    marginBottom: 20,\n    borderRadius: 10\n  },\n  textInput: {\n    width: '90%',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    padding: 12,\n    position: 'relative'\n  },\n  searchIcon: {\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    padding: 3\n  },\n  menuProvider: {},\n  planetScroll: {},\n  searchBar: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: 'center',\n    zIndex: 1,\n    marginHorizontal: 10,\n    marginBottom: 10,\n    marginTop: 15\n  },\n  infoWrapper: {\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    flex: 2\n  },\n  headerWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n    borderTopLeftRadius: 40,\n    borderTopRightRadius: 40\n  },\n  infoText: {\n    color: 'white'\n  },\n  header: {\n    fontSize: 23,\n    fontWeight: \"bold\",\n    color: \"#ffff\"\n  },\n  pBrief: {\n    backgroundColor: 'white'\n  },\n  buttonWrapper: {\n    alignItems: \"stretch\"\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(82, 113, 255, 0.7)',\n    color: \"white\",\n    padding: 10,\n    margin: 2,\n    borderRadius: 10\n  },\n  buttonText: {\n    color: \"white\"\n  },\n  menu: {\n    width: '40%',\n    padding: 10,\n    alignItems: 'flex-end',\n    marginBottom: 10\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/MyTemp/kurssit/projekti/exoview/exoview-frontend/src/screens/Search.js"],"names":["React","useEffect","useState","parse","TouchableOpacity","Menu","MenuProvider","MenuOptions","MenuOption","MenuTrigger","MaterialIcons","set","Search","navigation","route","foundPlanets","setFoundPlanets","allPlanets","setAllPlanets","searchFilter","setFilter","searchTerm","changeSearchTerm","juoksevaluku","setJuoksevaluku","menuTriggerText","setMenuTriggerText","params","renderFoundPlanets","map","planet","generateKey","parseSearchTerms","Keyboard","dismiss","searchedWord","filteredPlanetsAr","filter","toLowerCase","match","toString","handleTextChange","term","createQuery","hakuehto","undefined","console","log","alku","loppu","hakutermi","changeMenuTrigger","backgroundColor","padding","styles","searchBar","textInput","searchIcon","flexDirection","alignItems","justifyContent","menu","fontSize","color","item","pl_name","keys","idLength","i","id","charAt","Math","floor","random","length","PlanetBrief","props","isVisible","toggleVisibility","renderView","view","infoWrapper","infoText","data","hostname","pl_masse","pl_rade","buttonWrapper","button","handleStarsystem2","buttonText","handleStarsystem","container","headerWrapper","header","nimi","kutsu","fetchData","then","star","setStars","tahdenplaneetat","system","planets","navigate","fetch","response","text","teksti","objects","planetArray","VOTABLE","RESOURCE","TABLE","DATA","TABLEDATA","TR","Promise","resolve","reject","success","arr","TD","propPlanet","st_spectype","st_teff","st_rad","st_mass","st_age","st_rotp","StyleSheet","create","marginHorizontal","marginBottom","borderRadius","width","borderTopLeftRadius","borderBottomLeftRadius","position","borderTopRightRadius","borderBottomRightRadius","menuProvider","planetScroll","zIndex","marginTop","alignContent","flex","fontWeight","pBrief","margin"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {  FlatList, Keyboard, View, Text, TextInput, StyleSheet, ScrollView } from 'react-native';\r\nimport { parse } from 'fast-xml-parser';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { Menu, MenuProvider, MenuOptions, MenuOption, MenuTrigger} from \"react-native-popup-menu\";\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { set } from 'react-native-reanimated';\r\n\r\n//Planeettojen etsimisikkuna\r\nconst Search = ({ navigation, route } ) => {\r\n\r\n    /*Aloitusmaksimi queryssa\r\n    var start = 0;\r\n    var alku = \"https://exoplanetarchive.ipac.caltech.edu/TAP/sync?query=select+hostname,pl_name,pl_rade,pl_bmasse,pl_bmassj,pl_radj+from+pscomppars+where+\";\r\n\tvar loppu = \"+default_flag+=+1\";//format=csv;\r\n\t*/\r\n\r\n    //Löydetyt planeetat\r\n    const [foundPlanets, setFoundPlanets] = useState([]) \r\n\r\n    const [allPlanets, setAllPlanets] = useState([])\r\n\r\n    //Hakufiltteri\r\n    const [searchFilter, setFilter] = useState('')\r\n\r\n    //Hakutermi\r\n    const [searchTerm, changeSearchTerm] = useState('')\r\n\r\n    //laitettava tänne, jotta päivittyy aina\r\n    const [juoksevaluku, setJuoksevaluku] = useState(0)\r\n\r\n    //Menutriggerin tekstin vaihto\r\n    const [menuTriggerText, setMenuTriggerText] = useState('Search options')\r\n\r\n\r\n    //Aloittaa hakemalla datan\r\n    useEffect(() => {\r\n        setAllPlanets(route.params)\r\n    }, []);\r\n\r\n    //asetetaan alussa kaikki planeetat löytyneiksi\r\n    useEffect(() => {\r\n        setFoundPlanets(allPlanets)\r\n    }, [allPlanets])\r\n\r\n\r\n    //Tekee löydetyistä planeetoista katseltavia komponentteja\r\n    const renderFoundPlanets = () => {\r\n        return foundPlanets.map(planet => <PlanetBrief navigation={navigation} data={planet} key={generateKey()}/>)\r\n    }\r\n\r\n\r\n    //Käsittelee hakutermin ja -filtterin\r\n    const parseSearchTerms = () => {\r\n        \r\n        if(searchTerm === \"\" || searchFilter === \"\"){ \r\n            Keyboard.dismiss(); \r\n            setFilter(\"\"); \r\n            setMenuTriggerText('Search Options'); \r\n            return setFoundPlanets(allPlanets);\r\n        }\r\n        const searchedWord = '^' + searchTerm\r\n        const filteredPlanetsAr = (searchFilter !== 'pl_rade' && searchFilter !== 'pl_masse' \r\n\r\n        ? (allPlanets.filter(planet => planet[searchFilter].toLowerCase().match(searchTerm.toLowerCase())))\r\n        : (allPlanets.filter(planet => planet[searchFilter].toString().match(searchedWord))))\r\n\r\n        setFoundPlanets(filteredPlanetsAr)\r\n        Keyboard.dismiss()\r\n\r\n    }\r\n\r\n    const handleTextChange = (term) => {\r\n        if (term === '') {\r\n            setFilter(\"\"); \r\n            //setMenuTriggerText('Search Options'); \r\n            return setFoundPlanets(allPlanets);\r\n        }\r\n\r\n        changeSearchTerm(term)\r\n    }\r\n\r\n    //Luo uuden api queryn\r\n    const createQuery = () => {\r\n        var hakuehto = searchFilter;\r\n\r\n        //var rajat = '+rownum+>=' + juoksevaluku + '+and+rownum+<+' + (juoksevaluku+9) +'+and'\r\n        \r\n        if (hakuehto === '' || hakuehto === undefined) {\r\n            console.log(alku+/*rajat+*/loppu);\r\n            return alku + /*rajat+*/ loppu;\r\n        } \r\n        //+and'    + /*rajat+*/ loppu\r\n        var hakutermi = '+like+\\'' + searchTerm + '%\\''\r\n        console.log(alku + hakuehto + hakutermi);\r\n        return alku + hakuehto + hakutermi;\r\n    }\r\n\r\n    const changeMenuTrigger = (filter) => {\r\n        switch (filter) {\r\n            case \"pl_name\":\r\n                setMenuTriggerText(\"Planet name\");\r\n                break;\r\n            case \"hostname\":\r\n                setMenuTriggerText(\"Host star\");\r\n                break;\r\n            case \"pl_rade\":\r\n                setMenuTriggerText(\"Radius\");\r\n                break;\r\n            case \"pl_masse\":\r\n                setMenuTriggerText(\"Planet masse\");\r\n                break;\r\n                \r\n            default:\r\n                setMenuTriggerText(\"Search options\");\r\n                break;\r\n\r\n        }\r\n    }\r\n    \r\n    //Palauttaa hakunäkymän\r\n    return (\r\n        \r\n            <MenuProvider style={{ backgroundColor: '#0E1D32', padding: 5}} on>\r\n                    <View style={styles.searchBar}>\r\n                        <TextInput style={styles.textInput} onChangeText={term => handleTextChange(term)}></TextInput>\r\n                    <TouchableOpacity style ={styles.searchIcon} onPress={() => parseSearchTerms()}>\r\n                        {/*<Text style={styles.buttonText}>Search</Text>*/}\r\n                        <MaterialIcons name=\"search\" size={35} color=\"white\" />\r\n                    </TouchableOpacity>    \r\n                    </View>\r\n                    <View style={{flexDirection: 'row', alignItems: 'flex-end', justifyContent:'flex-end'}}>\r\n                    <Menu style={styles.menu} onSelect={filter => \r\n                                    {\r\n                                        setFilter(filter);\r\n                                        changeMenuTrigger(filter);\r\n                                    }}>\r\n                        <MenuTrigger  /*onPress={() => setMenuProviderStyle()}*/ >\r\n                            <Text style={{fontSize: 14, color:'white'}}>{menuTriggerText}</Text>\r\n                        </MenuTrigger>\r\n                        <MenuOptions style={{backgroundColor: '#0E1D32', padding: 10}}>\r\n                            <MenuOption value={\"pl_name\"}>\r\n                                <Text style={{color:'white', padding: 5}}>Planet name</Text>\r\n                            </MenuOption>\r\n                            <MenuOption value={\"hostname\"}>\r\n                                <Text style={{color:'white', padding: 5}}>Host star</Text>\r\n                            </MenuOption>\r\n\r\n                            <MenuOption value={\"pl_rade\"}>\r\n                                <Text style={{color:'white', padding: 5}}>Radius</Text>\r\n                            </MenuOption>\r\n\r\n                            <MenuOption value={\"pl_masse\"}>\r\n                                <Text style={{color:'white', padding: 5}}>Planet masse</Text>\r\n                            </MenuOption>\r\n                        </MenuOptions>\r\n                    </Menu>\r\n                    </View>\r\n                    {/*\r\n                    <ScrollView onScroll={({nativeEvent}) => {loadNext(nativeEvent);}} scrollEventThrottle={16}>\r\n                        {renderFoundPlanets()}\r\n                    </ScrollView> */}\r\n\r\n                    <FlatList\r\n                        data={foundPlanets}\r\n                        renderItem={({ item }) => (\r\n                            <PlanetBrief navigation={navigation} data={item} allPlanets={foundPlanets} />\r\n                        )}\r\n                        keyExtractor={(item) => item.pl_name}\r\n                        >\r\n                        \r\n                    </FlatList>\r\n\r\n            </MenuProvider>     \r\n\r\n    )\r\n}\r\n\r\n//Luo id:n planeettakomponenteille\r\nconst generateKey = () => {\r\n    const keys = '1234567890abcdefghijklmnopqrstuvwxyz'\r\n\r\n    const idLength = 10\r\n\r\n    let i = 0;\r\n\r\n    let id = '';\r\n\r\n    while (i < idLength) {\r\n        id = id + keys.charAt(Math.floor(Math.random() * Math.floor(keys.length)))\r\n        i++;\r\n    }\r\n\r\n    return id;\r\n}\r\n\r\n//Planeetan kevyet tiedot search-näkymään\r\n//TODO komponentin voinee eriyttää\r\n//TODO infon collapse\r\n//TODO n/a jos tietoa ei ole saatavilla\r\nconst PlanetBrief = ( props ) => {\r\n\r\n    var isVisible = false;\r\n\r\n    const toggleVisibility = () => {\r\n        isVisible = !isVisible;\r\n    }\r\n\r\n    const renderView = () => {\r\n        if (isVisible) {\r\n            return view;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    var view =  <View style={{flexDirection:'row'}}>    \r\n                    <View style={styles.infoWrapper}>\r\n                        <Text style={styles.infoText}>\r\n                            Host star: { props.data.hostname}\r\n                        </Text>\r\n                        <Text style={styles.infoText}>\r\n                            Masse: { props.data.pl_masse}\r\n                        </Text>\r\n                        <Text style={styles.infoText}>\r\n                            Radius: { props.data.pl_rade}\r\n                        </Text>\r\n                        {/*\r\n                        <Text>\r\n                            Discovery year: { props.data.disc_year}\r\n                        </Text>\r\n                        */}\r\n                    </View>\r\n                    <View style = {styles.buttonWrapper}>\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleStarsystem2(props)}><Text style={styles.buttonText}>View planet</Text></TouchableOpacity>\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleStarsystem(props)}><Text style={styles.buttonText}>Stellar System</Text></TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style = {styles.headerWrapper} onPress = {toggleVisibility()}>\r\n                <Text style = {styles.header}>\r\n                    { props.data.pl_name }\r\n                </Text>\r\n            </View>\r\n            {renderView()}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst handleStarsystem = (props,allPlanets) => {\r\n    //console.log(props.allPlanets.length)\r\n    var nimi = props.data.pl_name;\r\n    var kutsu = \"https://exoplanetarchive.ipac.caltech.edu/TAP/sync?query=select+top+1+st_spectype,st_teff,st_rad,st_mass,st_age,st_rotp+from+pscomppars+where+pl_name+like+\\'\"+nimi+\"\\'+order+by+disc_year+desc\";\r\n    fetchData(kutsu)\r\n    .then((data) =>{\r\n        var star = setStars(data,props.data.hostname)\r\n        var tahdenplaneetat = props.allPlanets.filter(planet => planet['hostname'].match(star.hostname))\r\n        const system = {star: star, planets: tahdenplaneetat}\r\n        props.navigation.navigate('StarSystem', system)\r\n    })\r\n\r\n}\r\nconst handleStarsystem2 = (props,allPlanets) => {\r\n    //console.log(props.allPlanets.length)\r\n    var nimi = props.data.pl_name;\r\n    var kutsu = \"https://exoplanetarchive.ipac.caltech.edu/TAP/sync?query=select+top+1+st_spectype,st_teff,st_rad,st_mass,st_age,st_rotp+from+pscomppars+where+pl_name+like+\\'\"+nimi+\"\\'+order+by+disc_year+desc\";\r\n    fetchData(kutsu)\r\n    .then((data) =>{\r\n        var star = setStars(data,props.data.hostname)\r\n        var tahdenplaneetat = props.allPlanets.filter(planet => planet['hostname'].match(star.hostname))\r\n        const system = {star: star, planets: tahdenplaneetat}\r\n        props.navigation.navigate('Information',{ planet:props.data, system: system} )\r\n    })\r\n\r\n}\r\nconst fetchData = async ( props ) => {\r\n    const response = await fetch(props);\r\n\r\n    const teksti = await response.text();\r\n    const objects = await parse(teksti);\r\n\r\n    const planetArray = objects.VOTABLE.RESOURCE.TABLE.DATA.TABLEDATA.TR;\r\n    return new Promise((resolve, reject) => {\r\n        var success = planetArray != undefined;\r\n        success ? resolve(planetArray) : reject('Query failed');\r\n    })\r\n}\r\n    \r\n    const setStars = (arr,data) => {\r\n        const star = arr.TD\r\n        const propPlanet =\r\n            {\r\n                hostname: data,\r\n                st_spectype: star[0],\r\n                st_teff: star[1],\r\n                st_rad: star[2],\r\n                st_mass: star[3],\r\n                st_age: star[4],\r\n                st_rotp: star[5]\r\n            }\r\n        return propPlanet\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'rgba(255,255,255,0.2)',\r\n        padding:10,\r\n        marginHorizontal: 10,\r\n        marginBottom: 20,\r\n        borderRadius: 10, \r\n\r\n    },\r\n\r\n    textInput: {\r\n        width: '90%',\r\n        backgroundColor: 'rgba(255,255,255,0.2)',\r\n        borderTopLeftRadius:10,\r\n        borderBottomLeftRadius: 10,\r\n        padding:12,\r\n        position: 'relative'\r\n    },\r\n    searchIcon: {\r\n        backgroundColor: 'rgba(255,255,255,0.2)',\r\n        borderTopRightRadius:10,\r\n        borderBottomRightRadius: 10,\r\n        padding: 3\r\n\r\n    },\r\n\r\n    menuProvider:{\r\n        \r\n    },\r\n    planetScroll:{\r\n        \r\n    },\r\n    searchBar: {\r\n        //backgroundColor: '#0E1D32',\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n        zIndex:1,\r\n        marginHorizontal: 10,\r\n        marginBottom:10,\r\n        marginTop: 15,\r\n    },\r\n\r\n    infoWrapper: {\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        flex: 2\r\n    },\r\n\r\n    headerWrapper: {\r\n        flexDirection:'row',\r\n        justifyContent:'flex-start',\r\n        //backgroundColor: '#134261',\r\n       // borderWidth:1,\r\n        //borderColor: '#134261',\r\n        borderBottomLeftRadius: 40,\r\n        borderBottomRightRadius:40,\r\n        borderTopLeftRadius: 40,\r\n        borderTopRightRadius: 40, \r\n        \r\n    },\r\n    infoText: {\r\n        color: 'white'\r\n    },\r\n\r\n    header: {\r\n        fontSize: 23,\r\n        fontWeight: \"bold\",\r\n        color: \"#ffff\"\r\n    },\r\n    pBrief: {\r\n        backgroundColor: 'white'\r\n    },\r\n    buttonWrapper: {\r\n        //flexDirection: \"row\",\r\n        alignItems: \"stretch\",\r\n        \r\n    },\r\n\r\n    button:{\r\n        alignItems:'center',\r\n        backgroundColor:'rgba(82, 113, 255, 0.7)',\r\n        color: \"white\",\r\n        padding: 10,\r\n        margin: 2,\r\n        borderRadius: 10\r\n    },\r\n\r\n    buttonText: {\r\n        color: \"white\"\r\n    },\r\n    menu: {\r\n        width: '40%',\r\n        padding: 10,\r\n        alignItems:'flex-end',\r\n        marginBottom:10\r\n        \r\n\r\n    }\r\n});\r\n\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}